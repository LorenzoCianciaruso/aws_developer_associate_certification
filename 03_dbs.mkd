# 03 DBs
Regions contains Availability Zones (AZ). Each AZ is isolated in term of network and power supply.

* Relational DBs
* Non-Relational DBs

## Relational DBs
### Amazon RDS
- Aurora: MySQL, PostgreSQL -> Amazon fork with optimized engines
- Commercial: Oracle, MS SQLServer
- Community: MySQL, PostgreSQL, MariaDB

You need a persistent connection to the DBs in order to access it.

#### Benefits
- Components Scaling
- Automatic back ups and patching (you can define time windows when the back ups or patching should happen to avoid service disruption)
- High Availability: you can run it in different AZs (mirrored)
- Automatic Failure detection and recovery

#### MySQL
Currently Supporst MySql 5.5, 5.6, 5.7

Instance Support:   
* Micro Instance
* General Purpose
* Memory Optimized
* Burst Support

Storage Support:
- SSD General Purpose
- SSD Provisional IOPS: predictable performance up to 40.000 IOPS

#### MS SQL Server
Price includes license (2008R2, 2012, 2014, 2016, 2017)

Instance Support:
* General Purpose
* Memory Optimized
* Burst Support

Storage Support
* SSD General Purpose: form 3 to 3.000 IOPS per GB
* SSD Provisional IOPS: from 1.000 to 32.000 IOPS up to 16TB

**NOTE:** Microsoft SQL Server is the one database engine that offers high availability with server mirroring instead of the AWS standard feature of Multi-AZ deployments.

#### Oracle
Supports: BYOL and Oracle Database 12c. You can use your own license or use one provided by AWS.

#### Maria DB
Instance Support:   
* Micro Instance
* General Purpose
* Memory Optimized
* Burst Support

#### PostgreSQL
Instance Support:
* Micro
* Standard
* Memory Optimised

#### Amazon Aurora
Cloud native high performance forked from MySQL but optimised.
Replicated data across 3 AZs by default. Write only on Master, the other replicas only Reads.

### Amazon RedShift
DataWarehouse DB

## Non-Relational DB
- Dynamo DB
- Amazon ElastiCache: MemCache.d, Redis
- Amazon Neptune: Graph DB

### Dynamo DB
Fully Managed. Supports Document and key store objects.
You can download a local version of Dynamo DB so that you can test it locally. It is encrypted. Supports both speed and perfomance

### Amazon ElastiCache
It's basically a frontline cache fully managed built on top of Redis and Memcache.d.
Memcached for speed and simplicity, Redis supports more feature (cache for complex objects)
Amazon Neptune graph DB

You'll access it by HTTP, so you need authorisation to do so.

### Test practice
**Question:** What AWS database service offers a non-relational database optimized for storing and navigating billions of relationships with millisecond query latency?
**Answer:** Amazon Neptune. Amazon Neptune is a graph database service that makes it easy to build and run applications that need to use a lot of queries and lookups to quickly visualize data. Now graphing data can require a complex number of connection strings and related queries.

**Question:** Which Amazon RDS database engine offers high availability with database server mirroring instead of multi-AZ deployment?
**Answer:** MS SQL Server. Microsoft SQL Server is the one database engine that offers high availability with server mirroring instead of the AWS standard feature of Multi-AZ deployments.

**Question:** Elasticache for Redis is recommended over Memcached for all the uses cases below except which one?
**Answer:** You are running large nodes with multiple cores or threads. Memcached is ideal for developing a service with the simplest model possible, prioritizing scalability, and running large nodes with multiple cores and threads.

Result: 80%


## RDS Multi-AZ deployment
- Failover process: when a lead node fails, then AWS automatically switches to a replica nodes with no manual changes in the environment.
AWS updated the DNS to point to the secondary node within 60-120 seconds. You can get notified when a failover happens because AWS
produces an event called __RDS-EVENT-0025__, so that you can analyze the event and understand what happened.

* For MS SQL Server achieves resilience with mirroring instead of Multi-AZ deployment. Although not available on all versions of MS SQL Server.
The difference with automatic multi-AZ deployment is that you need to declare where you want your replicas to live in. You need to define a VPS that span across at least 2 AZs and where your main has to live at least in one of them.
* Aurora is by default Fault tolerant. Although, replicas are deployed across different AZs, but the master is only in one AZ, which means that
if master fails, it can take time long (10 min) to build a new master in a different AZ. Although if you enable multi AZ then, replicas are kept alive in different AZ and when a failure happens then one of those replicas can be elected as master. You can have up to 15 replicas per AZ if required.

### Read replicas
These are used to increase performances, not for resiliency. This feature is only available for MySql, MariaDB and PostgreSQL.
It can be even cross region, and in case of failure one of the replicas can be elected as lead node.

* MySQL: up to 4 layers deep, up to 5 read replicas per source database, which it ends up being a tree with 5 children per node and 4 level of deepness. So you get a lot of read replicas.
* Maria DB: same as above
* PostgreSQL: Backup retention must be greater than 0. It has to be version 9.3.5 or higher. Data is replicated asynchrounously by sending the WAL FILE to the replicas. You also need a specific role to manage the replication. You can't have nested replicas like for MySql or MariaDB